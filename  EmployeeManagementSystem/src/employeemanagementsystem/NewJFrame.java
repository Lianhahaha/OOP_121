/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package employeemanagementsystem;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.HashSet;
import java.util.Set;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class NewJFrame extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        initComponents();
         setLocationRelativeTo(null);
        loadProducts();
        getAllStatus();
        addTableSelectionListener();
        searchtxt.addKeyListener(new java.awt.event.KeyAdapter() {
            @Override
            public void keyReleased(java.awt.event.KeyEvent evt) {
                performSearch();
            }
        });
    }
 private void loadProducts() {
      String query = "SELECT * FROM employee";
    try (Connection conn = DB_connection.getConnection(); 
         Statement stmt = conn.createStatement(); 
         ResultSet rs = stmt.executeQuery(query)) {
        DefaultTableModel tableModel = (DefaultTableModel) jTable1.getModel();
        tableModel.setRowCount(0);
        while (rs.next()) {
            tableModel.addRow(new Object[]{
                rs.getInt("ID"),
                rs.getString("Name"),
                rs.getString("Contact"),
                rs.getString("Gender"),
                rs.getString("Salary") // FIXED from getDouble to getString
            });
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
    }
    }

    private void getAllStatus() {
        Set<String> statuses = new HashSet<>();
    gender.removeAllItems();
    gender.addItem("Select Gender");

    String query = "SELECT DISTINCT Gender FROM employee"; 
    try (Connection conn = DB_connection.getConnection(); 
         Statement stmt = conn.createStatement(); 
         ResultSet rs = stmt.executeQuery(query)) {
        while (rs.next()) {
            String s = rs.getString("Gender"); 
            if (statuses.add(s)) {
                gender.addItem(s);
            }
        }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Error fetching genders: " + e.getMessage());
    }
    }

    private void addTableSelectionListener() {
        jTable1.getSelectionModel().addListSelectionListener(e -> {
            int selectedRow = jTable1.getSelectedRow();
            if (selectedRow >= 0) {
              name.setText(jTable1.getValueAt(selectedRow, 1).toString());
                contact.setText(jTable1.getValueAt(selectedRow, 2).toString());
                gender.setSelectedItem(jTable1.getValueAt(selectedRow, 3).toString());
                salary.setText(jTable1.getValueAt(selectedRow, 4).toString());
            }
        });
    }

    private void performSearch() {
      String keyword = searchtxt.getText().trim();
    System.out.println("Searching for keyword: " + keyword);
    
    String query = "SELECT * FROM employee WHERE Name LIKE ? OR Contact LIKE ? OR Gender LIKE ? OR Salary LIKE ?";
    
    try (Connection conn = DB_connection.getConnection(); PreparedStatement ps = conn.prepareStatement(query)) {
        String likeKeyword = "%" + keyword + "%";
        ps.setString(1, likeKeyword);
        ps.setString(2, likeKeyword);
        ps.setString(3, likeKeyword);
        ps.setString(4, likeKeyword);
        
        ResultSet rs = ps.executeQuery();
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0); // Clear existing rows
        
        int rowCount = 0;
        while (rs.next()) {
            model.addRow(new Object[]{
                rs.getInt("ID"),
                rs.getString("Name"),
                rs.getString("Contact"),
                rs.getString("Gender"),
                rs.getString("Salary")
            });
            rowCount++;
        }
        System.out.println("Rows found: " + rowCount);
        
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Search failed: " + e.getMessage());
    }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        contact = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        gender = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        salary = new javax.swing.JTextField();
        update = new javax.swing.JButton();
        Save1 = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        searchtxt = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Name", "Contact", "Gender", "Salary"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 760, 590));

        jLabel1.setText("Name:");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 90, -1, -1));

        name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameActionPerformed(evt);
            }
        });
        jPanel1.add(name, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 110, 270, 20));

        jLabel2.setText("Gender:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 190, -1, 20));

        contact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                contactActionPerformed(evt);
            }
        });
        jPanel1.add(contact, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 160, 270, 20));

        jLabel3.setText("Contact Number:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 140, -1, 20));

        gender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        gender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                genderActionPerformed(evt);
            }
        });
        jPanel1.add(gender, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 210, 270, -1));

        jLabel4.setText("Salary");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 240, -1, -1));

        salary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salaryActionPerformed(evt);
            }
        });
        jPanel1.add(salary, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 260, 270, -1));

        update.setText("Update");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });
        jPanel1.add(update, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 310, 100, -1));

        Save1.setText("Save");
        Save1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Save1ActionPerformed(evt);
            }
        });
        jPanel1.add(Save1, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 310, 100, -1));

        delete.setText("Delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });
        jPanel1.add(delete, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 310, 100, -1));
        jPanel1.add(searchtxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 260, -1));

        jButton1.setText("search");
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 30, -1, -1));

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void contactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_contactActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_contactActionPerformed

    private void nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameActionPerformed

    private void genderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_genderActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_genderActionPerformed

    private void salaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salaryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_salaryActionPerformed

    private void Save1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Save1ActionPerformed
       String name1 = name.getText();
    String con = contact.getText();
    String genderselect = (String) gender.getSelectedItem();
    String sal = salary.getText();

    if (name1.isEmpty() || con.isEmpty() || sal.isEmpty() || genderselect.equals("Select Gender")) {
        JOptionPane.showMessageDialog(null, "Please fill all fields and select a valid gender.");
        return;
    }

    String query = "INSERT INTO employee (`Name`, Contact, Gender, Salary) VALUES (?, ?, ?, ?)";

    try (Connection conn = DB_connection.getConnection(); PreparedStatement pstmt = conn.prepareStatement(query)) {
        pstmt.setString(1, name1);
        pstmt.setString(2, con );
        pstmt.setString(3, genderselect);
        pstmt.setString(4, sal);
        pstmt.executeUpdate();

        JOptionPane.showMessageDialog(null, "employee added successfully!");
        loadProducts();
        getAllStatus();

        // Reset fields
        name.setText("");
        contact.setText("");
        gender.setSelectedIndex(0);
        salary.setText("");

    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
    }
    }//GEN-LAST:event_Save1ActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        int selectedRow = jTable1.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(null, "Please select a row to delete.");
            return;
        }

        int id = Integer.parseInt(jTable1.getValueAt(selectedRow, 0).toString());
        int confirm = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete this?", "Confirm Delete", JOptionPane.YES_NO_OPTION);
        if (confirm != JOptionPane.YES_OPTION) {
            return;
        }

        try {
            String query = "DELETE FROM employee WHERE ID= ?";
            try (Connection conn = DB_connection.getConnection(); PreparedStatement pstmt = conn.prepareStatement(query)) {
                pstmt.setInt(1, id);
                pstmt.executeUpdate();
                JOptionPane.showMessageDialog(null, "deleted successfully!");
                loadProducts();
                getAllStatus();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
        }
    }//GEN-LAST:event_deleteActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
      int selectedRow = jTable1.getSelectedRow();
    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(null, "Please select a employee to update.");
        return;
    }

    String id = jTable1.getValueAt(selectedRow, 0).toString();
    String name1 = name.getText();
    String con = contact.getText();
    String genderselect = (String) gender.getSelectedItem();
    String sal = salary.getText();

    if (name1.isEmpty() || con.isEmpty() || sal.isEmpty() || genderselect.equals("Select Gender")) {
        JOptionPane.showMessageDialog(null, "Please fill all fields and select a valid gender.");
        return;
    }

    String query = "UPDATE employee SET Name = ?, Contact = ?, Gender = ?, Salary = ? WHERE ID = ?";
    try (Connection conn = DB_connection.getConnection(); PreparedStatement pstmt = conn.prepareStatement(query)) {
        pstmt.setString(1, name1);
        pstmt.setString(2, con);
        pstmt.setString(3, genderselect);
        pstmt.setString(4, sal);
        pstmt.setInt(5, Integer.parseInt(id));
        pstmt.executeUpdate();
        JOptionPane.showMessageDialog(null, "employee updated successfully!");
        loadProducts();
        getAllStatus();
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
    }
    }//GEN-LAST:event_updateActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Save1;
    private javax.swing.JTextField contact;
    private javax.swing.JButton delete;
    private javax.swing.JComboBox<String> gender;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField name;
    private javax.swing.JTextField salary;
    private javax.swing.JTextField searchtxt;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables
}
